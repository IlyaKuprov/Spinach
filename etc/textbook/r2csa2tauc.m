% Estimates the rotational correlation time from the transverse
% CSA relaxation rate. Syntax:
%
%             tauc=r2csa2tauc(R1,del_sq,B0,isotope)
%
% Parameters:
%
%    R2      - transverse relaxation rate, Hz
%
%    del_sq  - second rank invariant of the CSA,
%              see blinv.m function
%             
%    B0      - magnetic field, Tesla
%
%    isotope - isotope specification string, e.g. '1H'
%
% Outputs:
%
%    tauc    - rotational correlation time, seconds
%
% ilya.kuprov@weizmann.ac.il
%
% <https://spindynamics.org/wiki/index.php?title=r2csa2tauc.m>

function tauc=r2csa2tauc(R2,del_sq,B0,isotope)

% Check consistency
grumble(R2,del_sq,B0,isotope);

% Get the Zeeman frequency
omega=-B0*spin(isotope);

% Solve the cubic equation (autogenerated by Mathematica)
tauc(1)=(1/36)*del_sq^(-1)*omega^(-4)*(135*omega^2*R2+3*3^(2/3)*    ...
         omega^4*((-28)*del_sq^2*omega^2+675*R2^2)*(675*(2*         ...
         del_sq^2*omega^8*R2+45*omega^6*R2^3)+2*3^(1/2)*(del_sq^2*  ...
         omega^14*(5488*del_sq^4*omega^4+(-245025)*del_sq^2*        ...
         omega^2*R2^2+16402500*R2^4))^(1/2))^(-1/3)+3*(4050*        ...
         del_sq^2*omega^8*R2+91125*omega^6*R2^3+6*3^(1/2)*(         ...
         del_sq^2*omega^14*(5488*del_sq^4*omega^4+(-245025)*        ...
         del_sq^2*omega^2*R2^2+16402500*R2^4))^(1/2))^(1/3));
tauc(2)=(1/72)*del_sq^(-1)*omega^(-4)*(270*omega^2*R2+6*(-1)^(1/3)  ...
         *3^(2/3)*omega^4*(28*del_sq^2*omega^2+(-675)*R2^2)*(       ...
         675*(2*del_sq^2*omega^8*R2+45*omega^6*R2^3)+2*3^(1/2)*(    ...
         del_sq^2*omega^14*(5488*del_sq^4*omega^4+(-245025)*        ...
         del_sq^2*omega^2*R2^2+16402500*R2^4))^(1/2))^(-1/3)+(sqrt( ...
         -1)*3)*(sqrt(-1)+3^(1/2))*(4050*del_sq^2*omega^8*R2+91125* ...
         omega^6*R2^3+6*3^(1/2)*(del_sq^2*omega^14*(5488*           ...
         del_sq^4*omega^4+(-245025)*del_sq^2*omega^2*R2^2+16402500* ...
         R2^4))^(1/2))^(1/3));
tauc(3)=(1/72)*del_sq^(-1)*omega^(-4)*(270*omega^2*R2+6*(-3)^(2/3)  ...
         *omega^4*((-28)*del_sq^2*omega^2+675*R2^2)*(675*(2*        ...
         del_sq^2*omega^8*R2+45*omega^6*R2^3)+2*3^(1/2)*(del_sq^2*  ...
         omega^14*(5488*del_sq^4*omega^4+(-245025)*del_sq^2*        ...
         omega^2*R2^2+16402500*R2^4))^(1/2))^(-1/3)+(-6)*(-3)^(1/3) ...
         *(675*(2*del_sq^2*omega^8*R2+45*omega^6*R2^3)+2*3^(1/2)    ...
         *(del_sq^2*omega^14*(5488*del_sq^4*omega^4+(-245025)*      ...
         del_sq^2*omega^2*R2^2+16402500*R2^4))^(1/2))^(1/3));

% Check for imaginary components
if (~isreal(tauc(1)))&&(~isreal(tauc(2)))&&(~isreal(tauc(3)))
    error('no real solutions - physically impossible case.');
end

end

% Consistency enforcement
function grumble(R2,del_sq,B0,isotope)
if (~isnumeric(R2))||(~isreal(R2))||...
   (~isscalar(R2))||(R2<=0)
    error('R1 must be a positive real number.');
end
if (~isnumeric(del_sq))||(~isreal(del_sq))||...
   (~isscalar(del_sq))||(del_sq<=0)
    error('del_sq must be a positive real number.');
end
if (~isnumeric(B0))||(~isreal(B0))||(~isscalar(B0))
    error('B0 must be a real number.');
end
if ~ischar(isotope)
    error('isotope must be a character string.');
end
end

% To refute is to perpetuate. To be enticed into debating
% 'what is two plus two' is to embarrass yourself, even if
% you're on the side that plumps for 'four'. To conduct the
% argument in the first place is to lose it.
%
% Lionel Shriver

